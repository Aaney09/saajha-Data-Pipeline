config {
    type: "table",
    tags:"rewardProgram",
    description: "metrics of reward program",
    columns: {
        TreatmentNames: "names of the three treatment arms",
        totalParents: "Count of Unique parent ids in each treatment arm",
        totalParentsToFirstAssessmentConversion: "count Of ParentId with First assessment divide by total parent ids",
        totalParentsToSecondAssessmentConversion: "count Of ParentId with second assessment divide by total parent ids",
        TotalParentsToThirdAssessmentConversion: "count Of ParentId with third assessment divide by total parent ids",
        FirstAssessmentToSecondAssessmentConversion: "count Of ParentId with second assessment parentids divide by first assessment parent ids",
        secondAssessmentToSecondAssessmentConversion: "count Of ParentId with third assessment parentids divide by second assessment parent ids",
        TotalRewardPoints: "total rewards point",
        AverageRewardPoint: "average rewards point",
        standardDeviationRewardPoints: "standard deviation of reward points",
        minRound1CallsAttempts:"minimum call attempts in round 1",
        minRound2CallsAttempts:"minimum call attempts in round 2",
        minRound3CallsAttempts:"minimum call attempts in round 3",
        stdeviationRound1CallsAttempts: "standard deviation of call attempts in round1",
        stdeviationRound2CallsAttempts: "standard deviation of call attempts in round2",
        stdeviationRound3CallsAttempts: "standard deviation of call attempts in round3",
        averageRound1CallAttempts: "average calls attempts in round 1",
        averageRound2CallAttempts: "average calls attempts in round 2",
        averageRound3CallAttempts: "average calls attempts in round 3",
        MaxRound1CallsAttempts: "maximum call attempts in round 1",
        MaxRound2CallsAttempts: "maximum call attempts in round 2",
        MaxRound3CallsAttempts: "maximum call attempts in round 3",
        totalOptedOutParents: "total opted out parents"
    }
}

SELECT
  Treatments AS TreatmentNames,
  count(distinct rosterParentid) AS totalParents,
  count(distinct if(opt_out_status = true,rosterParentid,Null) )AS totalOptedOutParents,
  Round((count(distinct if(Round_1_assessment is not null,rosterParentid,Null))/count(distinct rosterParentid))*100,3) AS totalParentsToFirstAssessmentConversion,
  Round((count(distinct if(Round_2_assessment is not null,rosterParentid,Null))/count(distinct rosterParentid))*100,3) AS totalParentsToSecondAssessmentConversion,
  Round((count(distinct if(Round_3_assessment is not null,rosterParentid,Null))/count(distinct rosterParentid))*100,3) AS TotalParentsToThirdAssessmentConversion,
  Round((count(distinct if(Round_2_assessment is not null,rosterParentid,Null))/count(distinct if(Round_1_assessment is not null,rosterParentid,Null)))*100,3) as FirstAssessmentToSecondAssessmentConversion,
  Round((count(distinct if(Round_3_assessment is not null,rosterParentid,Null))/count(distinct if(Round_2_assessment is not null,rosterParentid,Null)))*100,3) as SecondAssessmentTothirdAssessmentConversion,
  sum(rewardpoints) as TotalRewardPoints,
  round((sum(rewardpoints)/count(distinct rosterParentid))*100,3) AverageRewardPoint,
  STDDEV(rewardPoints) standardDeviationRewardPoints,

  min(round1CallAttempts) minRound1CallsAttempts,
  STDDEV(round1CallAttempts) stdeviationRound1CallsAttempts,
  round(avg(round1CallAttempts)*100,3) averageRound1CallAttempts,
  max(round1CallAttempts) MaxRound1CallsAttempts,

  min(round2CallAttempts) minRound2CallsAttempts,
  STDDEV(round2CallAttempts) stdeviationRound2CallsAttempts,
  round(avg(round2CallAttempts)*100,3) averageRound2CallAttempts,
  max(round2CallAttempts) MaxRound2CallsAttempts,

  min(round3CallAttempts) minRound3CallsAttempts,
  STDDEV(round3CallAttempts) stdeviationRound3CallsAttempts,
  round(avg(round3CallAttempts)*100,3) averageRound3CallAttempts,
  max(round3CallAttempts) MaxRound3CallsAttempts,
 
FROM
  ${ref("finalRewardProgramdata")}
group by TreatmentNames
