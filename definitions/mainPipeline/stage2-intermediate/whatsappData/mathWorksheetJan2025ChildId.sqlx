config {
    type: "table",
    tags: "wa_daily"
    }

with math_ws as (

select distinct
phone_number,
id,chat_id,template_name,
sent_at,
ARRAY_LENGTH((SPLIT(JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text'),"&"))) lengthOfSplitedArray,
safe_cast(regexp_extract(regexp_extract(SPLIT(split(JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text'),
    "&")[1],"=")[1],'(W[a-zA-Z]+[0-9]+)'),'([0-9]+)') as int64) worksheetNumber,
safe_cast(regexp_extract(SPLIT(split(JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text'),
    "&")[1],"=")[1],'L(?:evel)?([0-4])') as int64) LevelNumber,

SPLIT(split(JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text'),
    "&")[2],"=")[1] math_assessment_name,
SPLIT(split(JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text'),
    "&")[3],"=")[1] hindi_assessment_name ,
safe_cast(regexp_extract(regexp_extract(SPLIT(split(JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text'),
    "&")[1],"=")[1],'([M][0-9]+)'),'([0-9]+)') as int64) monthNumber,

replace(replace(SPLIT(split(JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text'),
    "&")[4],"=")[1],"%20"," "),","," ")decoded_math_assessment_date ,

replace(replace(SPLIT(split(JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text'),
    "&")[5],"=")[1],"%20"," "),","," ")decoded_hindi_assessment_date ,    
     safe_Cast(SPLIT(split(JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text'),
    "&")[6],"=")[1] as int64) parentid,
     SPLIT(split(JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text'),
     "&")[7],"=")[1] childid,

FROM
   `dataform.template-sent`
where 
template_name in("mfln_worksheet_v2") and phone_number not in(918888727876
,919971478794,918527647594,919915539829)
and last_message_status <> "failed"
  and ARRAY_LENGTH((SPLIT(JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text'),"&")))>=9
  )


select * except(decoded_hindi_assessment_date,decoded_math_assessment_date,childid,parentid),
    CASE
      WHEN REGEXP_CONTAINS(math_ws.decoded_math_assessment_date, r'\d{1,2} [A-Za-z]{3} \d{4}, \d{1,2}:\d{2} (AM|PM)') THEN
        PARSE_DATETIME('%d %b %Y, %I:%M %p', math_ws.decoded_math_assessment_date)
      WHEN REGEXP_CONTAINS(math_ws.decoded_math_assessment_date, r'\d{1,2}/\d{1,2}/\d{4} \d{2}:\d{2}:\d{2}') THEN
        PARSE_DATETIME('%m/%d/%Y %H:%M:%S', math_ws.decoded_math_assessment_date)
      ELSE NULL
    END AS math_assessment_date,
    CASE
      WHEN REGEXP_CONTAINS(math_ws.decoded_hindi_assessment_date, r'\d{1,2} [A-Za-z]{3} \d{4}, \d{1,2}:\d{2} (AM|PM)') THEN
        PARSE_DATETIME('%d %b %Y, %I:%M %p', math_ws.decoded_hindi_assessment_date)
      WHEN REGEXP_CONTAINS(math_ws.decoded_hindi_assessment_date, r'\d{1,2}/\d{1,2}/\d{4} \d{2}:\d{2}:\d{2}') THEN
        PARSE_DATETIME('%m/%d/%Y %H:%M:%S', math_ws.decoded_hindi_assessment_date)
      ELSE NULL
    END AS hindi_assessment_date,
    safe_Cast(parentid as int64)parentid ,
    safe_Cast(childid as int64) childid
from math_ws