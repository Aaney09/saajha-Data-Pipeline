config {
    type: "table",
    tags: "wa_daily"
}


WITH base AS (
  SELECT
    phone_number,
    id,
    chat_id,
    template_name,
    sent_at,
    last_message_status,
    error_code,
    error_reason,
    saajha_whatsapp_number,
    uuid,
    -- Extract full param string once
    JSON_VALUE(template_meta_data,'$.components[2].parameters[0].text') AS param_text
  FROM ${ref("template-sent")}
  WHERE template_name ="fln_worksheet" and lower(template_meta_data) like "%content_id=hindi%"
    AND phone_number NOT IN (918888727876,919971478794,918527647594,919915539829)

),

-- Split param string into array
parts AS (
  SELECT
    b.*,
    SPLIT(param_text,"&") AS arr
  FROM base b
),

-- Convert array into key/value map (so we avoid multiple SPLITs later)
kv AS (
  SELECT
    p.*,
    ARRAY_LENGTH(arr) AS lengthOfSplitedArray,
    (SELECT AS STRUCT
    SPLIT(arr[SAFE_OFFSET(1)],"=")[SAFE_OFFSET(1)] AS worksheet_id,
    SPLIT(arr[SAFE_OFFSET(2)],"=")[SAFE_OFFSET(1)] AS math_assessment_name,
    SPLIT(arr[SAFE_OFFSET(3)],"=")[SAFE_OFFSET(1)] AS hindi_assessment_name,
    REPLACE(REPLACE(SPLIT(arr[SAFE_OFFSET(4)],"=")[SAFE_OFFSET(1)],"%20"," "),","," ") AS raw_math_date,
    REPLACE(REPLACE(SPLIT(arr[SAFE_OFFSET(5)],"=")[SAFE_OFFSET(1)],"%20"," "),","," ") AS raw_hindi_date,
    CASE WHEN ARRAY_LENGTH(arr) >= 9 THEN SPLIT(arr[SAFE_OFFSET(6)],"=")[SAFE_OFFSET(1)] END AS parentid,
    CASE WHEN ARRAY_LENGTH(arr) >= 9 THEN SPLIT(arr[SAFE_OFFSET(7)],"=")[SAFE_OFFSET(1)] END AS childid,
    CASE 
      WHEN ARRAY_LENGTH(arr) >= 9 THEN SPLIT(arr[SAFE_OFFSET(8)],"=")[SAFE_OFFSET(1)]
      WHEN ARRAY_LENGTH(arr) = 7 THEN SPLIT(arr[SAFE_OFFSET(6)],"=")[SAFE_OFFSET(1)]
    END AS worksheet_link
) AS kv_struct

  FROM parts p
),

final AS (
  SELECT
    phone_number, id, chat_id, template_name, sent_at,
    last_message_status, error_code, error_reason,
    lengthOfSplitedArray,
    kv_struct.worksheet_id,
    SAFE_CAST(REGEXP_EXTRACT(kv_struct.worksheet_id, r'(?i)W[a-z]+([0-9]+)') AS INT64) AS worksheetNumber,
    SAFE_CAST(REGEXP_EXTRACT(kv_struct.worksheet_id, r'(?i)L(?:evel)?([0-4])') AS INT64) AS LevelNumber,
    SAFE_CAST(REGEXP_EXTRACT(kv_struct.worksheet_id, r'(?i)M([0-9]+)') AS INT64) AS monthNumber,

    kv_struct.math_assessment_name,
    kv_struct.hindi_assessment_name,

    COALESCE(
      SAFE.PARSE_DATETIME('%d %b %Y, %I:%M %p', kv_struct.raw_math_date),
      SAFE.PARSE_DATETIME('%d %b %Y %I:%M %p', kv_struct.raw_math_date),
      SAFE.PARSE_DATETIME('%m/%d/%Y %H:%M:%S', kv_struct.raw_math_date)
    ) AS math_assessment_date,

    COALESCE(
      SAFE.PARSE_DATETIME('%d %b %Y, %I:%M %p', kv_struct.raw_hindi_date),
      SAFE.PARSE_DATETIME('%d %b %Y %I:%M %p', kv_struct.raw_hindi_date),
      SAFE.PARSE_DATETIME('%m/%d/%Y %H:%M:%S', kv_struct.raw_hindi_date)
    ) AS hindi_assessment_date,

    SAFE_CAST(kv_struct.parentid AS INT64) AS parentid,
    SAFE_CAST(kv_struct.childid AS INT64) AS childid,
    kv_struct.worksheet_link,
    saajha_whatsapp_number,
    uuid
  FROM kv
)

SELECT DISTINCT *
FROM final


