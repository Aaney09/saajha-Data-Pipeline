config {
    type: "table",
    tags: "IE",
    description: "IE result failure tracking for the assessed children"
    }


with 
hindi as (select distinct AssesseeActorId,Date(AssessmentTakenOn)dateOfAssessment,if(Level= "BEGINNER",0,safe_cast(regexp_extract(Level,r'\d') as int64)) as hindiLevel
from ${ref("assessment")}
where QuestionText like "%Ask%" and AssessmentId<>6
qualify row_number() over(partition by AssesseeActorId,date(AssessmentTakenOn) order by AssessmentTakenOn desc)=1
)
, math as (select distinct AssesseeActorId,Date(AssessmentTakenOn)dateOfAssessment, if(Level= "BEGINNER",0,safe_cast(regexp_extract(Level,r'\d') as int64)) as mathlevel
from ${ref("assessment")}
where QuestionText not like  "%Ask%" and AssessmentId <> 6
qualify row_number() over(partition by AssesseeActorId,date(AssessmentTakenOn) order by AssessmentTakenOn desc)=1
)

, childDetails as (select 
distinct 
IEId as childid, OnBoardedUserId as parentid,ProjectId as ProjectId,
safe_cast(regexp_extract(Education,r'\d+') as int64)as childClass,Education
from ${ref("IE")}
where  projectid=1103912
)

, assessments as (
  select *, dateOfAssessment+1 as hindi_content_to_send_on,dateOfAssessment+2 as math_content_to_send_on,
  case  
when c.childClass = 1 and mathLevel>=2 then TRUE
when c.childClass = 2 and mathLevel>=3 then TRUE
when c.childClass >=3 and mathLevel>=4 then TRUE
Else false
end mathFLnAchievedClassWise,
case  
when c.childClass = 1 and hindiLevel>=3 then TRUE
when c.childClass >=2 and hindiLevel>=4 then TRUE
Else false
end hindiFLnAchievedClassWise
from hindi h
inner join math m
using(assesseeActorID,dateOfAssessment)
inner join childDetails c
on assesseeActorID=childid
where m.dateOfAssessment <= current_date("Asia/Kolkata")-3
)


,whom_hindi_worksheet_should_not_go as (
  select *
  from assessments
  where hindiLevel = 4
  union distinct 
  select *
  from assessments
  where mathFLnAchievedClassWise = true and hindiFLnAchievedClassWise=true
)

, hindi_first_worksheet_sent as (
  select distinct parentid,childid,
  phone_number as hindi_1st_worksheet_sent_to,
  date(sent_at) as hindi_worksheet1_sent_on,last_message_status as hindi_1st_worksheet_msg_status,error_code as hindi_1st_worksheet_error_code,error_reason as hindi_1st_worksheet_error_reason,
  from ${ref("IE_hindi_worksheet_sent")} 
  where worksheetNumber =1 
)

,hindi_first_worksheet_success as (
  select distinct parentid,childid,hindi_worksheet1_sent_on
  from hindi_first_worksheet_sent
  where hindi_1st_worksheet_msg_status<>"failed"
)

, sent_hindi_first_content as (
  select distinct m.*
  from assessments r
  inner join hindi_first_worksheet_Sent m
  using(childid)
  where hindi_content_to_send_on=hindi_worksheet1_sent_on
  -- datetime_diff(m.hindi_worksheet1_sent_on,sent_at,day)= 2
)


,main_ as (select distinct mhrs.*except(assesseeActorID),mfc.* except(childid,parentid)
from 
assessments mhrs
left join sent_hindi_first_content mfc 
-- using(parentid,childid)
on mhrs.parentid=mfc.parentid
and mhrs.childid=mfc.childid
and mhrs.hindi_content_to_send_on=mfc.hindi_worksheet1_sent_on

)

select dateOfAssessment,
hindi_content_to_send_on,
count(distinct m.parentid)ParentIdAssessed,
    count(distinct m.childid)ChildiAssessed,

    

    count(distinct if(g.childid is null,m.parentid,null)) mathWorksheetToProcess,
   count(distinct if(g.childid is null and m.hindi_worksheet1_sent_on is not null,m.parentid,null))mathWorksheetProcessed,
   round(
    (
      count(distinct if(g.childid is null,m.parentid,null))-count(distinct if(g.childid is null  and m.hindi_worksheet1_sent_on is not null,m.parentid,null))
    )
    /nullif(count(distinct if(g.childid is null,m.parentid,null)),0) *100
    ,2) turn_math_failure_Rate,
   count(distinct if(hindi_1st_worksheet_msg_status="failed" and ws.parentid is null,m.parentid,null))mathWorksheet_meta_failed,
   round ( count(distinct if(hindi_1st_worksheet_msg_status="failed" and ws.parentid is null,m.parentid,null))/nullif(count(distinct if(m.hindi_worksheet1_sent_on is not null,m.parentid,null)),0)*100,2)mathWorksheet_meta_failure_rate,
   round(
    (
      count(distinct if(hindi_1st_worksheet_msg_status="failed" and ws.parentid is null,m.parentid,null))
        +
      (count(distinct if(g.childid is null,m.parentid,null))-count(distinct if(m.hindi_worksheet1_sent_on is not null,m.parentid,null)))
    
    )
    /nullif(count(distinct if(g.childid is null,m.parentid,null)),0)*100
    
    ,2)
  math_1st_content_failure_rate,
   /** math worksheet meta error details **/
      count(distinct if(hindi_1st_worksheet_error_code="131050"  and ws.parentid is null,m.parentid,null)) as hindiWorksheetError_131050_User_has_stopped_reciept_of_marketing_messages,
      count(distinct if(hindi_1st_worksheet_error_code="131049"  and ws.parentid is null,m.parentid,null)) as hindiWorksheetError_131049_Meta_chose_not_to_deliver,
      count(distinct if(hindi_1st_worksheet_error_code="131026"  and ws.parentid is null,m.parentid,null)) as hindiWorksheetError_131026_Message_Undeliverable,
      count(distinct if(hindi_1st_worksheet_error_code="131000"  and ws.parentid is null,m.parentid,null)) as hindiWorksheetError_131000_Something_went_wrong,
      count(distinct if(hindi_1st_worksheet_error_code="130472"  and ws.parentid is null,m.parentid,null)) as hindiWorksheetError_130472_User_number_is_part_of_an_experiment,

from main_ m
left join whom_hindi_worksheet_should_not_go g
using(parentid,childid,dateOfAssessment,hindi_content_to_send_on,mathlevel)

left join hindi_first_worksheet_success ws
on m.parentid=ws.parentid and m.childid= ws.childid
and date(m.hindi_content_to_send_on) = date(ws.hindi_worksheet1_sent_on)

group by all
order by 1 desc

